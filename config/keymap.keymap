#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv {
    delay-ms = <0>;
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <1>;
    trigger-period-ms = <10>;
};

&msc {
    trigger-period-ms = <10>;
    delay-ms = <0>;
    acceleration-exponent = <0>;
    time-to-max-speed-ms = <0>;
};

/ {
    behaviors {
        ht_boot_reset: ht_boot_reset {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_BOOT_RESET";
            bindings = <&bootloader>, <&sys_reset>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <10>;
        };

        ul_move: move_up_left {
            compatible = "zmk,behavior-mod-morph";
            label = "MOVE UP LEFT";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_UP>, <&mmv MOVE_LEFT>;

            mods = <MOD_LALT>;
        };

        dr_move: move_down_right {
            compatible = "zmk,behavior-mod-morph";
            label = "MOVE DOWN RIGHT";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_DOWN>, <&mmv MOVE_RIGHT>;

            mods = <MOD_LALT>;
        };

        uldr_move: move_up_left_down_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&ul_move>, <&dr_move>;

            tap-ms = <10>;
        };
    };

    combos {
        compatible = "zmk,combos";

        scroll {
            bindings = <&to 6>;
            key-positions = <50 44>;
        };

        scroll-snipe {
            bindings = <&to 7>;
            key-positions = <50 45>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC           &kp Q         &kp W             &kp E      &kp R  &kp T  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp Y      &kp U  &kp I      &kp O              &kp P          &mt DELETE BACKSPACE
&kp TAB           &kp A         &kp S             &kp D      &kp F  &kp G  &kp CAPS          &kp BACKSLASH      &kp H      &kp J  &kp K      &kp L              &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT    &kp Z         &kp X             &kp C      &kp V  &kp B                                       &kp N      &kp M  &kp COMMA  &kp PERIOD         &kp SLASH      &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE  &to 1  &to 2  &to 3             &to 4              &kp ENTER  &to 0  &tog 5     &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp MINUS  &kp EQUAL  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &kp NUMBER_0  &trans
&trans  &none         &none         &none         &none         &none   &trans     &kp GRAVE  &none         &none         &none         &none           &none         &none
&trans  &kp LG(Q)     &kp LG(W)     &none         &none         &none                         &none         &none         &none         &none           &kp UP_ARROW  &trans
&trans  &trans        &trans        &trans        &trans        &trans  &trans     &trans     &trans        &trans        &trans        &kp LEFT_ARROW  &kp DOWN      &kp RIGHT
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans
&trans  &none   &none   &none   &none   &none   &none   &none   &none   &none   &none    &none    &none    &none
&trans  &none   &none   &none   &none   &none                   &none   &none   &none    &none    &none    &trans
&none   &none   &none   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &none    &none    &none
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_PRV  &bt BT_CLR  &bt BT_CLR_ALL  &none   &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9
&none   &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_NXT  &none       &none           &none   &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6
&none   &none          &none          &none          &none          &none                                  &none           &none   &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3
&none   &none          &none          &trans         &trans         &trans         &trans      &trans      &trans          &trans  &trans  &kp KP_NUMBER_0  &kp KP_DOT       &mt DELETE BACKSPACE
            >;
        };

        Mouse {
            bindings = <
&trans  &none  &none  &none   &none   &none   &ht_boot_reset 0 0  &none   &none      &none      &none      &none           &msc SCRL_UP    &trans
&none   &none  &none  &none   &none   &none   &none               &none   &mkp LCLK  &mkp MCLK  &mkp RCLK  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT
&none   &none  &none  &none   &none   &none                               &none      &none      &none      &none           &mmv MOVE_UP    &none
&none   &none  &none  &trans  &trans  &trans  &trans              &trans  &trans     &trans     &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT
            >;
        };

        Snipe {
            bindings = <
&trans  &none  &none  &none   &none   &none   &trans  &none   &none      &none      &none      &none           &msc SCRL_UP    &trans
&none   &none  &none  &none   &none   &none   &none   &none   &mkp LCLK  &mkp MCLK  &mkp RCLK  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT
&none   &none  &none  &none   &none   &none                   &none      &none      &none      &none           &mmv MOVE_UP    &none
&none   &none  &none  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT
            >;

            sensor-bindings = <&uldr_move>, <&uldr_move>;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&mouse_scrl SCRL_DOWN SCRL_UP>,
                <&mouse_scrl SCRL_UP SCRL_DOWN>;
        };

        Scroll_snipe {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&mouse_scrl SCRL_DOWN SCRL_UP>,
                <&mouse_scrl SCRL_UP SCRL_DOWN>;
        };
    };
};
